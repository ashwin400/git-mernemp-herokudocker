{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashwi\\\\OneDrive\\\\Desktop\\\\movie rec\\\\Movies\\\\frontend\\\\src\\\\pages\\\\Movies\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { search, categorize, filterRating } from \"../../utils\";\nimport { MoviesTable, Pagination } from \"../../components\";\nimport { Input, Loading } from \"../../components/common\";\nimport { getMovies as _getMovies } from \"../../actions/moviesAction\";\nimport { getGenres as _getGenres } from \"../../actions/genreAction\";\n\nvar Movies = /*#__PURE__*/function (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      genres: [],\n      pageSize: 12,\n      currentPage: 1,\n      currentGenre: \"All\",\n      searchFilter: \"\",\n      rating: 0\n    };\n\n    _this.handleChange = function (name, value) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"currentPage\", 1), _this$setState));\n    };\n\n    _this.onPageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getMovies();\n      this.props.getGenres();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentGenre = _this$state.currentGenre,\n          currentPage = _this$state.currentPage,\n          searchFilter = _this$state.searchFilter,\n          pageSize = _this$state.pageSize,\n          rating = _this$state.rating;\n      var movies = this.props.movies;\n\n      if (_.isEmpty(movies)) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"background-container pt-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      var filteredMovies = [];\n      /* Checking for searched item if nothing searched it will just set it to allMovies*/\n\n      filteredMovies = search(movies, searchFilter, \"title\");\n      filteredMovies = categorize(filteredMovies, currentGenre);\n      filteredMovies = filterRating(filteredMovies, rating);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mx-5 py-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        onChange: function onChange(event) {\n          return _this2.handleChange(\"searchFilter\", event.target.value);\n        },\n        label: \"Search Movie\",\n        iconClass: \"fas fa-search\",\n        placeholder: \"Search...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-left text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, !!filteredMovies.length ? \"\".concat(filteredMovies.length) : \"0\", \"movies found.\"), !!filteredMovies ? /*#__PURE__*/React.createElement(MoviesTable, {\n        pageSize: pageSize,\n        currentPage: currentPage,\n        movies: filteredMovies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"No Movies\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        itemsCount: filteredMovies.length,\n        pageSize: pageSize,\n        onPageChange: this.onPageChange,\n        currentPage: currentPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.movie.movies,\n    genres: state.genre.genres,\n    loggedIn: state.auth.loggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getMovies: function getMovies() {\n      return dispatch(_getMovies());\n    },\n    getGenres: function getGenres() {\n      return dispatch(_getGenres());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"sources":["C:/Users/ashwi/OneDrive/Desktop/movie rec/Movies/frontend/src/pages/Movies/index.js"],"names":["React","Component","connect","_","search","categorize","filterRating","MoviesTable","Pagination","Input","Loading","getMovies","getGenres","Movies","state","genres","pageSize","currentPage","currentGenre","searchFilter","rating","handleChange","name","value","setState","onPageChange","page","props","movies","isEmpty","filteredMovies","event","target","length","mapStateToProps","movie","genre","loggedIn","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport { search, categorize, filterRating } from \"../../utils\";\r\nimport { MoviesTable, Pagination } from \"../../components\";\r\nimport { Input, Loading,  } from \"../../components/common\";\r\n\r\nimport { getMovies } from \"../../actions/moviesAction\";\r\nimport { getGenres } from \"../../actions/genreAction\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    genres: [],\r\n    pageSize: 12,\r\n    currentPage: 1,\r\n    currentGenre: \"All\",\r\n    searchFilter: \"\",\r\n    rating: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getMovies();\r\n    this.props.getGenres();\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    this.setState({ [name]: value, currentPage: 1 });\r\n  };\r\n\r\n  onPageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentGenre,\r\n      currentPage,\r\n      searchFilter,\r\n      pageSize,\r\n      rating,\r\n    } = this.state;\r\n\r\n    const { movies } = this.props;\r\n\r\n    if (_.isEmpty(movies)) {\r\n      return (\r\n        <div className=\"background-container pt-5\">\r\n          <Loading />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let filteredMovies = [];\r\n\r\n    /* Checking for searched item if nothing searched it will just set it to allMovies*/\r\n    filteredMovies = search(movies, searchFilter, \"title\");\r\n    filteredMovies = categorize(filteredMovies, currentGenre);\r\n    filteredMovies = filterRating(filteredMovies, rating);\r\n\r\n    return (\r\n      <div className=\"background-container\">\r\n        <div className=\"mx-5 py-5\">\r\n          <div className=\"row\">\r\n          \r\n\r\n            <div className=\"col-lg-12 col-sm-12\">\r\n              <Input\r\n                onChange={(event) =>\r\n                  this.handleChange(\"searchFilter\", event.target.value)\r\n                }\r\n                label=\"Search Movie\"\r\n                iconClass=\"fas fa-search\"\r\n                placeholder=\"Search...\"\r\n              />\r\n              <p className=\"text-left text-muted\">\r\n                {!!filteredMovies.length ? `${filteredMovies.length}` : \"0\"}\r\n                movies found.\r\n              </p>\r\n\r\n              {!!filteredMovies ? (\r\n                <MoviesTable\r\n                  pageSize={pageSize}\r\n                  currentPage={currentPage}\r\n                  movies={filteredMovies}\r\n                />\r\n              ) : (\r\n                <h1 className=\"text-white\">No Movies</h1>\r\n              )}\r\n              <br />\r\n\r\n              <Pagination\r\n                itemsCount={filteredMovies.length}\r\n                pageSize={pageSize}\r\n                onPageChange={this.onPageChange}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    movies: state.movie.movies,\r\n    genres: state.genre.genres,\r\n    loggedIn: state.auth.loggedIn,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMovies: () => dispatch(getMovies()),\r\n    getGenres: () => dispatch(getGenres()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\r\n"]},"metadata":{},"sourceType":"module"}